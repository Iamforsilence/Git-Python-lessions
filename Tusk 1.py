# 1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()),
# который должен принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
# Примеры матриц вы найдете в методичке.
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
# Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix
# (двух матриц). Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы
# складываем с первым элементом первой строки второй матрицы и т.д.


# возможно со str я напутал(

class Matrix:
    def __init__(self, lst_1, lst_2):
        self.lst_1 = lst_1
        self.lst_2 = lst_2

    def __add__(self):
        matrix = [[0, 0, 0],
                  [0, 0, 0]]

        for i in range(len(self.lst_1)):

            for x in range(len(self.lst_2[i])):
                matrix[i][x] = self.lst_1[i][x] + self.lst_2[i][x]

        return str('\n'.join(['\t'.join([str(j) for j in i]) for i in matrix]))

    def __str__(self, ):
        matrix = [[0, 0, 0],
                  [0, 0, 0]]
        return str('\n'.join(['\t'.join([str(j) for j in i]) for i in matrix]))


my_matrix = Matrix([[1, 2, 3], [2, 3, 4]], [[2, 4, 6], [2, 3, 4]])

print(my_matrix.__add__())
