# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только
# чисел. Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные
# и заполнять список. Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам
# не остановит работу скрипта, введя, например, команду “stop”. При этом скрипт завершается, сформированный
# список выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки. При
# вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить
# его в список, только если введено число. Класс-исключение должен не позволить пользователю ввести
# текст (не число) и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.


# я не понял,почему у меня в конце выводится none, если я прерываю выполнение командой n.

class Exception:
    def __init__(self):
        self.my_list = []

    def my_input(self):
        while True:
            try:
                val = int(input('Введите значениe и нажмите Enter - '))
                self.my_list.append(val)
                print(f'Текущий список - {self.my_list} \n ')

            except:
                print("Недопустимое значение - строка или булево")
                new_try = input(f'Попробовать еще раз? Y/N ').lower()

                if new_try == 'n':
                    print(f'Вы закончили. Текущий список - {self.my_list}')
                    break
                elif new_try == 'y':
                    print(try_except.my_input())
                else:
                    print("Недопустимое значение - строка или булево")


try_except = Exception()
print(try_except.my_input())
